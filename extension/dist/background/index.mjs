var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __esm=(fn,res)=>function(){return fn&&(res=(0,fn[__getOwnPropNames(fn)[0]])(fn=0)),res};var __commonJS=(cb,mod)=>function(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod));var init_define_import_meta_env=__esm({"<define:import.meta.env>"(){}});var require_browser_polyfill=__commonJS({"node_modules/.pnpm/webextension-polyfill@0.8.0/node_modules/webextension-polyfill/dist/browser-polyfill.js"(exports2,module2){init_define_import_meta_env();(function(global2,factory){if(typeof define=="function"&&define.amd)define("webextension-polyfill",["module"],factory);else if(typeof exports2<"u")factory(module2);else{var mod={exports:{}};factory(mod),global2.browser=mod.exports}})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:exports2,function(module3){"use strict";if(typeof browser>"u"||Object.getPrototypeOf(browser)!==Object.prototype){let CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE="The message port closed before a response was received.",SEND_RESPONSE_DEPRECATION_WARNING="Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)",wrapAPIs=extensionAPIs=>{let apiMetadata={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(apiMetadata).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class DefaultWeakMap extends WeakMap{constructor(createItem,items=void 0){super(items),this.createItem=createItem}get(key){return this.has(key)||this.set(key,this.createItem(key)),super.get(key)}}let isThenable=value=>value&&typeof value=="object"&&typeof value.then=="function",makeCallback=(promise,metadata)=>(...callbackArgs)=>{extensionAPIs.runtime.lastError?promise.reject(new Error(extensionAPIs.runtime.lastError.message)):metadata.singleCallbackArg||callbackArgs.length<=1&&metadata.singleCallbackArg!==!1?promise.resolve(callbackArgs[0]):promise.resolve(callbackArgs)},pluralizeArguments=numArgs=>numArgs==1?"argument":"arguments",wrapAsyncFunction=(name,metadata)=>function(target,...args){if(args.length<metadata.minArgs)throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);if(args.length>metadata.maxArgs)throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);return new Promise((resolve,reject)=>{if(metadata.fallbackToNoCallback)try{target[name](...args,makeCallback({resolve,reject},metadata))}catch(cbError){console.warn(`${name} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,cbError),target[name](...args),metadata.fallbackToNoCallback=!1,metadata.noCallback=!0,resolve()}else metadata.noCallback?(target[name](...args),resolve()):target[name](...args,makeCallback({resolve,reject},metadata))})},wrapMethod=(target,method,wrapper)=>new Proxy(method,{apply(targetMethod,thisObj,args){return wrapper.call(thisObj,target,...args)}}),hasOwnProperty6=Function.call.bind(Object.prototype.hasOwnProperty),wrapObject=(target,wrappers={},metadata={})=>{let cache=Object.create(null),handlers={has(proxyTarget2,prop){return prop in target||prop in cache},get(proxyTarget2,prop,receiver){if(prop in cache)return cache[prop];if(!(prop in target))return;let value=target[prop];if(typeof value=="function")if(typeof wrappers[prop]=="function")value=wrapMethod(target,target[prop],wrappers[prop]);else if(hasOwnProperty6(metadata,prop)){let wrapper=wrapAsyncFunction(prop,metadata[prop]);value=wrapMethod(target,target[prop],wrapper)}else value=value.bind(target);else if(typeof value=="object"&&value!==null&&(hasOwnProperty6(wrappers,prop)||hasOwnProperty6(metadata,prop)))value=wrapObject(value,wrappers[prop],metadata[prop]);else if(hasOwnProperty6(metadata,"*"))value=wrapObject(value,wrappers[prop],metadata["*"]);else return Object.defineProperty(cache,prop,{configurable:!0,enumerable:!0,get(){return target[prop]},set(value2){target[prop]=value2}}),value;return cache[prop]=value,value},set(proxyTarget2,prop,value,receiver){return prop in cache?cache[prop]=value:target[prop]=value,!0},defineProperty(proxyTarget2,prop,desc){return Reflect.defineProperty(cache,prop,desc)},deleteProperty(proxyTarget2,prop){return Reflect.deleteProperty(cache,prop)}},proxyTarget=Object.create(target);return new Proxy(proxyTarget,handlers)},wrapEvent=wrapperMap=>({addListener(target,listener,...args){target.addListener(wrapperMap.get(listener),...args)},hasListener(target,listener){return target.hasListener(wrapperMap.get(listener))},removeListener(target,listener){target.removeListener(wrapperMap.get(listener))}}),onRequestFinishedWrappers=new DefaultWeakMap(listener=>typeof listener!="function"?listener:function(req){let wrappedReq=wrapObject(req,{},{getContent:{minArgs:0,maxArgs:0}});listener(wrappedReq)}),loggedSendResponseDeprecationWarning=!1,onMessageWrappers=new DefaultWeakMap(listener=>typeof listener!="function"?listener:function(message,sender,sendResponse){let didCallSendResponse=!1,wrappedSendResponse,sendResponsePromise=new Promise(resolve=>{wrappedSendResponse=function(response){loggedSendResponseDeprecationWarning||(console.warn(SEND_RESPONSE_DEPRECATION_WARNING,new Error().stack),loggedSendResponseDeprecationWarning=!0),didCallSendResponse=!0,resolve(response)}}),result;try{result=listener(message,sender,wrappedSendResponse)}catch(err){result=Promise.reject(err)}let isResultThenable=result!==!0&&isThenable(result);if(result!==!0&&!isResultThenable&&!didCallSendResponse)return!1;let sendPromisedResult=promise=>{promise.then(msg=>{sendResponse(msg)},error=>{let message2;error&&(error instanceof Error||typeof error.message=="string")?message2=error.message:message2="An unexpected error occurred",sendResponse({__mozWebExtensionPolyfillReject__:!0,message:message2})}).catch(err=>{console.error("Failed to send onMessage rejected reply",err)})};return sendPromisedResult(isResultThenable?result:sendResponsePromise),!0}),wrappedSendMessageCallback=({reject,resolve},reply)=>{extensionAPIs.runtime.lastError?extensionAPIs.runtime.lastError.message===CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE?resolve():reject(new Error(extensionAPIs.runtime.lastError.message)):reply&&reply.__mozWebExtensionPolyfillReject__?reject(new Error(reply.message)):resolve(reply)},wrappedSendMessage=(name,metadata,apiNamespaceObj,...args)=>{if(args.length<metadata.minArgs)throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);if(args.length>metadata.maxArgs)throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);return new Promise((resolve,reject)=>{let wrappedCb=wrappedSendMessageCallback.bind(null,{resolve,reject});args.push(wrappedCb),apiNamespaceObj.sendMessage(...args)})},staticWrappers={devtools:{network:{onRequestFinished:wrapEvent(onRequestFinishedWrappers)}},runtime:{onMessage:wrapEvent(onMessageWrappers),onMessageExternal:wrapEvent(onMessageWrappers),sendMessage:wrappedSendMessage.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:wrappedSendMessage.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},settingMetadata={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return apiMetadata.privacy={network:{"*":settingMetadata},services:{"*":settingMetadata},websites:{"*":settingMetadata}},wrapObject(extensionAPIs,staticWrappers,apiMetadata)};if(typeof chrome!="object"||!chrome||!chrome.runtime||!chrome.runtime.id)throw new Error("This script should only be loaded in a browser extension.");module3.exports=wrapAPIs(chrome)}else module3.exports=browser})}});var require_serialize_error=__commonJS({"node_modules/.pnpm/serialize-error@8.1.0/node_modules/serialize-error/index.js"(exports2,module2){"use strict";init_define_import_meta_env();var NonError=class extends Error{constructor(message){super(NonError._prepareSuperMessage(message)),Object.defineProperty(this,"name",{value:"NonError",configurable:!0,writable:!0}),Error.captureStackTrace&&Error.captureStackTrace(this,NonError)}static _prepareSuperMessage(message){try{return JSON.stringify(message)}catch{return String(message)}}},commonProperties=[{property:"name",enumerable:!1},{property:"message",enumerable:!1},{property:"stack",enumerable:!1},{property:"code",enumerable:!0}],isCalled=Symbol(".toJSON called"),toJSON=from=>{from[isCalled]=!0;let json=from.toJSON();return delete from[isCalled],json},destroyCircular=({from,seen,to_,forceEnumerable,maxDepth,depth})=>{let to=to_||(Array.isArray(from)?[]:{});if(seen.push(from),depth>=maxDepth)return to;if(typeof from.toJSON=="function"&&from[isCalled]!==!0)return toJSON(from);for(let[key,value]of Object.entries(from)){if(typeof Buffer=="function"&&Buffer.isBuffer(value)){to[key]="[object Buffer]";continue}if(typeof value!="function"){if(!value||typeof value!="object"){to[key]=value;continue}if(!seen.includes(from[key])){depth++,to[key]=destroyCircular({from:from[key],seen:seen.slice(),forceEnumerable,maxDepth,depth});continue}to[key]="[Circular]"}}for(let{property,enumerable}of commonProperties)typeof from[property]=="string"&&Object.defineProperty(to,property,{value:from[property],enumerable:forceEnumerable?!0:enumerable,configurable:!0,writable:!0});return to},serializeError2=(value,options={})=>{let{maxDepth=Number.POSITIVE_INFINITY}=options;return typeof value=="object"&&value!==null?destroyCircular({from:value,seen:[],forceEnumerable:!0,maxDepth,depth:0}):typeof value=="function"?`[Function: ${value.name||"anonymous"}]`:value},deserializeError=(value,options={})=>{let{maxDepth=Number.POSITIVE_INFINITY}=options;if(value instanceof Error)return value;if(typeof value=="object"&&value!==null&&!Array.isArray(value)){let newError=new Error;return destroyCircular({from:value,seen:[],to_:newError,maxDepth,depth:0}),newError}return new NonError(value)};module2.exports={serializeError:serializeError2,deserializeError}}});var require_tiny_uid=__commonJS({"node_modules/.pnpm/tiny-uid@1.1.2/node_modules/tiny-uid/index.js"(exports2,module2){init_define_import_meta_env();var generator=base=>typeof crypto<"u"&&typeof crypto.getRandomValues=="function"?()=>{let num=crypto.getRandomValues(new Uint8Array(1))[0];return(num>=base?num%base:num).toString(base)}:()=>Math.floor(Math.random()*base).toString(base),uid=(length=7,hex=!1)=>Array.from({length},generator(hex?16:36)).join("");module2.exports=uid;module2.exports.default=uid}});init_define_import_meta_env();init_define_import_meta_env();init_define_import_meta_env();var createNanoEvents=()=>({events:{},emit(event,...args){(this.events[event]||[]).forEach(i=>i(...args))},on(event,cb){return(this.events[event]=this.events[event]||[]).push(cb),()=>this.events[event]=(this.events[event]||[]).filter(i=>i!==cb)}});var import_webextension_polyfill=__toESM(require_browser_polyfill(),1),import_serialize_error=__toESM(require_serialize_error(),1),import_tiny_uid=__toESM(require_tiny_uid(),1),import_webextension_polyfill2=__toESM(require_browser_polyfill(),1),import_tiny_uid2=__toESM(require_tiny_uid(),1),import_tiny_uid3=__toESM(require_tiny_uid(),1);var __defProp2=Object.defineProperty,__defProps=Object.defineProperties,__getOwnPropDescs=Object.getOwnPropertyDescriptors,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp2=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(obj,key,value)=>key in obj?__defProp2(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__spreadValues=(a,b)=>{for(var prop in b||(b={}))__hasOwnProp2.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b))__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop]);return a},__spreadProps=(a,b)=>__defProps(a,__getOwnPropDescs(b)),ENDPOINT_RE=/^((?:background$)|devtools|content-script|window)(?:@(\d+))?$/,parseEndpoint=endpoint=>{let[,context2,tabId]=endpoint.match(ENDPOINT_RE)||[];return{context:context2,tabId:+tabId}};var hasAPI=nsps=>import_webextension_polyfill2.default[nsps],context=hasAPI("devtools")?"devtools":hasAPI("tabs")?"background":hasAPI("extension")?"content-script":typeof document<"u"?"window":null,runtimeId=(0,import_tiny_uid.default)(),openTransactions=new Map,onMessageListeners=new Map,messageQueue=new Set,portMap=new Map,port=null,namespace,isWindowMessagingAllowed;initIntercoms();function initIntercoms(){if(context===null)throw new Error("Unable to detect runtime context i.e webext-bridge can't figure out what to do");if((context==="window"||context==="content-script")&&window.addEventListener("message",handleWindowOnMessage),context==="content-script"&&top===window&&(port=import_webextension_polyfill.default.runtime.connect(),port.onMessage.addListener(message=>{routeMessage(message)})),context==="devtools"){let{tabId}=import_webextension_polyfill.default.devtools.inspectedWindow,name=`devtools@${tabId}`;port=import_webextension_polyfill.default.runtime.connect(void 0,{name}),port.onMessage.addListener(message=>{routeMessage(message)}),port.onDisconnect.addListener(()=>{port=null})}context==="background"&&import_webextension_polyfill.default.runtime.onConnect.addListener(incomingPort=>{let portId=incomingPort.name||`content-script@${incomingPort.sender.tab.id}`,{tabId:linkedTabId}=parseEndpoint(portId);linkedTabId&&(portMap.set(portId,incomingPort),messageQueue.forEach(queuedMsg=>{queuedMsg.resolvedDestination===portId&&(incomingPort.postMessage(queuedMsg.message),messageQueue.delete(queuedMsg))}),incomingPort.onDisconnect.addListener(()=>{portMap.delete(portId)}),incomingPort.onMessage.addListener(message=>{var _a;(_a=message?.origin)!=null&&_a.context&&(message.origin.tabId=linkedTabId,routeMessage(message))}))})}function routeMessage(message){let{origin,destination}=message;if(!message.hops.includes(runtimeId)&&(message.hops.push(runtimeId),!(context==="content-script"&&[destination,origin].some(endpoint=>endpoint?.context==="window")&&!isWindowMessagingAllowed))){if(!destination)return handleInboundMessage(message);if(destination.context){if(context==="window")return routeMessageThroughWindow(window,message);if(context==="content-script"&&destination.context==="window")return message.destination=null,routeMessageThroughWindow(window,message);if(context==="devtools"||context==="content-script")return destination.context==="background"&&(message.destination=null),port.postMessage(message);if(context==="background"){let{context:destName,tabId:destTabId}=destination,{tabId:srcTabId}=origin;destName!=="window"?message.destination=null:message.destination.tabId=null;let resolvedDestination=`${destName==="window"?"content-script":destName}@${destTabId||srcTabId}`,destPort=portMap.get(resolvedDestination);destPort?destPort.postMessage(message):messageQueue.add({resolvedDestination,message})}}}}async function handleInboundMessage(message){let{transactionId,messageID,messageType}=message,handleReply=()=>{let transactionP=openTransactions.get(transactionId);if(transactionP){let{err,data}=message;if(err){let dehydratedErr=err,errCtr=self[dehydratedErr.name],hydratedErr=new(typeof errCtr=="function"?errCtr:Error)(dehydratedErr.message);for(let prop in dehydratedErr)hydratedErr[prop]=dehydratedErr[prop];transactionP.reject(hydratedErr)}else transactionP.resolve(data);openTransactions.delete(transactionId)}},handleNewMessage=async()=>{let reply,err,noHandlerFoundError=!1;try{let cb=onMessageListeners.get(messageID);if(typeof cb=="function")reply=await cb({sender:message.origin,id:messageID,data:message.data,timestamp:message.timestamp});else throw noHandlerFoundError=!0,new Error(`[webext-bridge] No handler registered in '${context}' to accept messages with id '${messageID}'`)}catch(error){err=error}finally{if(err&&(message.err=(0,import_serialize_error.serializeError)(err)),routeMessage(__spreadProps(__spreadValues({},message),{messageType:"reply",data:reply,origin:{context,tabId:null},destination:message.origin,hops:[]})),err&&!noHandlerFoundError)throw reply}};switch(messageType){case"reply":return handleReply();case"message":return handleNewMessage()}}async function handleWindowOnMessage({data,ports}){if(!(context==="content-script"&&!isWindowMessagingAllowed)){if(data.cmd==="__crx_bridge_verify_listening"&&data.scope===namespace&&data.context!==context)ports[0].postMessage(!0);else if(data.cmd==="__crx_bridge_route_message"&&data.scope===namespace&&data.context!==context){let{payload}=data;context==="content-script"&&(payload.origin={context:"window",tabId:null}),routeMessage(payload)}}}function routeMessageThroughWindow(win,msg){ensureNamespaceSet();let channel=new MessageChannel,retry=setTimeout(()=>{channel.port1.onmessage=null,routeMessageThroughWindow(win,msg)},300);channel.port1.onmessage=()=>{clearTimeout(retry),win.postMessage({cmd:"__crx_bridge_route_message",scope:namespace,context,payload:msg},"*")},win.postMessage({cmd:"__crx_bridge_verify_listening",scope:namespace,context},"*",[channel.port2])}function ensureNamespaceSet(){if(typeof namespace!="string"||namespace.length===0)throw new Error(`webext-bridge uses window.postMessage to talk with other "window"(s), for message routing and stuff,which is global/conflicting operation in case there are other scripts using webext-bridge. Call Bridge#setNamespace(nsps) to isolate your app. Example: setNamespace('com.facebook.react-devtools'). Make sure to use same namespace across all your scripts whereever window.postMessage is likely to be used\``)}function onMessage(messageID,callback){onMessageListeners.set(messageID,callback)}async function sendMessage(messageID,data,destination="background"){let endpoint=typeof destination=="string"?parseEndpoint(destination):destination,errFn="Bridge#sendMessage ->";if(!endpoint.context)throw new TypeError(`${errFn} Destination must be any one of known destinations`);if(context==="background"){let{context:dest,tabId:destTabId}=endpoint;if(dest!=="background"&&!destTabId)throw new TypeError(`${errFn} When sending messages from background page, use @tabId syntax to target specific tab`)}return new Promise((resolve,reject)=>{let payload={messageID,data,destination:endpoint,messageType:"message",transactionId:(0,import_tiny_uid2.default)(),origin:{context,tabId:null},hops:[],timestamp:Date.now()};openTransactions.set(payload.transactionId,{resolve,reject}),routeMessage(payload)})}var _Stream=class{constructor(t){this.handleStreamClose=()=>{this.isClosed||(this.isClosed=!0,this.emitter.emit("closed",!0),this.emitter.events={})},this.internalInfo=t,this.emitter=createNanoEvents(),this.isClosed=!1,_Stream.initDone||(onMessage("__crx_bridge_stream_transfer__",msg=>{let{streamId,streamTransfer,action}=msg.data,stream=_Stream.openStreams.get(streamId);stream&&!stream.isClosed&&(action==="transfer"&&stream.emitter.emit("message",streamTransfer),action==="close"&&(_Stream.openStreams.delete(streamId),stream.handleStreamClose()))}),_Stream.initDone=!0),_Stream.openStreams.set(t.streamId,this)}get info(){return this.internalInfo}send(msg){if(this.isClosed)throw new Error("Attempting to send a message over closed stream. Use stream.onClose(<callback>) to keep an eye on stream status");sendMessage("__crx_bridge_stream_transfer__",{streamId:this.internalInfo.streamId,streamTransfer:msg,action:"transfer"},this.internalInfo.endpoint)}close(msg){msg&&this.send(msg),this.handleStreamClose(),sendMessage("__crx_bridge_stream_transfer__",{streamId:this.internalInfo.streamId,streamTransfer:null,action:"close"},this.internalInfo.endpoint)}onMessage(callback){return this.getDisposable("message",callback)}onClose(callback){return this.getDisposable("closed",callback)}getDisposable(event,callback){let off=this.emitter.on(event,callback);return Object.assign(off,{dispose:off,close:off})}},Stream=_Stream;Stream.initDone=!1;Stream.openStreams=new Map;var onOpenStreamCallbacks=new Map,streamyEmitter=createNanoEvents();onMessage("__crx_bridge_stream_open__",message=>new Promise(resolve=>{let{sender,data}=message,{channel}=data,watching=!1,off=()=>{},readyup=()=>{let callback=onOpenStreamCallbacks.get(channel);typeof callback=="function"?(callback(new Stream(__spreadProps(__spreadValues({},data),{endpoint:sender}))),watching&&off(),resolve(!0)):watching||(watching=!0,off=streamyEmitter.on("did-change-stream-callbacks",readyup))};readyup()}));var import_webextension_polyfill5=__toESM(require_browser_polyfill());init_define_import_meta_env();init_define_import_meta_env();var TimeoutError=class extends Error{constructor(message){super(message),this.name="TimeoutError"}},AbortError=class extends Error{constructor(message){super(),this.name="AbortError",this.message=message}},getDOMException=errorMessage=>globalThis.DOMException===void 0?new AbortError(errorMessage):new DOMException(errorMessage),getAbortedReason=signal=>{let reason=signal.reason===void 0?getDOMException("This operation was aborted."):signal.reason;return reason instanceof Error?reason:getDOMException(reason)};function pTimeout(promise,options){let{milliseconds,fallback,message,customTimers={setTimeout,clearTimeout}}=options,timer,cancelablePromise=new Promise((resolve,reject)=>{if(typeof milliseconds!="number"||Math.sign(milliseconds)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${milliseconds}\``);if(milliseconds===Number.POSITIVE_INFINITY){resolve(promise);return}if(options.signal){let{signal}=options;signal.aborted&&reject(getAbortedReason(signal)),signal.addEventListener("abort",()=>{reject(getAbortedReason(signal))})}let timeoutError=new TimeoutError;timer=customTimers.setTimeout.call(void 0,()=>{if(fallback){try{resolve(fallback())}catch(error){reject(error)}return}typeof promise.cancel=="function"&&promise.cancel(),message===!1?resolve():message instanceof Error?reject(message):(timeoutError.message=message??`Promise timed out after ${milliseconds} milliseconds`,reject(timeoutError))},milliseconds),(async()=>{try{resolve(await promise)}catch(error){reject(error)}finally{customTimers.clearTimeout.call(void 0,timer)}})()});return cancelablePromise.clear=()=>{customTimers.clearTimeout.call(void 0,timer),timer=void 0},cancelablePromise}init_define_import_meta_env();init_define_import_meta_env();var getRandomValues,rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}init_define_import_meta_env();var byteToHex=[];for(let i=0;i<256;++i)byteToHex.push((i+256).toString(16).slice(1));function unsafeStringify(arr,offset=0){return(byteToHex[arr[offset+0]]+byteToHex[arr[offset+1]]+byteToHex[arr[offset+2]]+byteToHex[arr[offset+3]]+"-"+byteToHex[arr[offset+4]]+byteToHex[arr[offset+5]]+"-"+byteToHex[arr[offset+6]]+byteToHex[arr[offset+7]]+"-"+byteToHex[arr[offset+8]]+byteToHex[arr[offset+9]]+"-"+byteToHex[arr[offset+10]]+byteToHex[arr[offset+11]]+byteToHex[arr[offset+12]]+byteToHex[arr[offset+13]]+byteToHex[arr[offset+14]]+byteToHex[arr[offset+15]]).toLowerCase()}init_define_import_meta_env();init_define_import_meta_env();var randomUUID=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),native_default={randomUUID};function v4(options,buf,offset){if(native_default.randomUUID&&!buf&&!options)return native_default.randomUUID();options=options||{};let rnds=options.random||(options.rng||rng)();if(rnds[6]=rnds[6]&15|64,rnds[8]=rnds[8]&63|128,buf){offset=offset||0;for(let i=0;i<16;++i)buf[offset+i]=rnds[i];return buf}return unsafeStringify(rnds)}var v4_default=v4;init_define_import_meta_env();var ChatGPTError=class extends Error{statusCode;statusText;isFinal;accountId},openai;(openai2=>{})(openai||={});init_define_import_meta_env();init_define_import_meta_env();function createParser(onParse){let isFirstChunk,buffer,startingPosition,startingFieldLength,eventId,eventName,data;return reset(),{feed,reset};function reset(){isFirstChunk=!0,buffer="",startingPosition=0,startingFieldLength=-1,eventId=void 0,eventName=void 0,data=""}function feed(chunk){buffer=buffer?buffer+chunk:chunk,isFirstChunk&&hasBom(buffer)&&(buffer=buffer.slice(BOM.length)),isFirstChunk=!1;let length=buffer.length,position=0,discardTrailingNewline=!1;for(;position<length;){discardTrailingNewline&&(buffer[position]===`
`&&++position,discardTrailingNewline=!1);let lineLength=-1,fieldLength=startingFieldLength,character;for(let index=startingPosition;lineLength<0&&index<length;++index)character=buffer[index],character===":"&&fieldLength<0?fieldLength=index-position:character==="\r"?(discardTrailingNewline=!0,lineLength=index-position):character===`
`&&(lineLength=index-position);if(lineLength<0){startingPosition=length-position,startingFieldLength=fieldLength;break}else startingPosition=0,startingFieldLength=-1;parseEventStreamLine(buffer,position,fieldLength,lineLength),position+=lineLength+1}position===length?buffer="":position>0&&(buffer=buffer.slice(position))}function parseEventStreamLine(lineBuffer,index,fieldLength,lineLength){if(lineLength===0){data.length>0&&(onParse({type:"event",id:eventId,event:eventName||void 0,data:data.slice(0,-1)}),data="",eventId=void 0),eventName=void 0;return}let noValue=fieldLength<0,field=lineBuffer.slice(index,index+(noValue?lineLength:fieldLength)),step=0;noValue?step=lineLength:lineBuffer[index+fieldLength+1]===" "?step=fieldLength+2:step=fieldLength+1;let position=index+step,valueLength=lineLength-step,value=lineBuffer.slice(position,position+valueLength).toString();if(field==="data")data+=value?"".concat(value,`
`):`
`;else if(field==="event")eventName=value;else if(field==="id"&&!value.includes("\0"))eventId=value;else if(field==="retry"){let retry=parseInt(value,10);Number.isNaN(retry)||onParse({type:"reconnect-interval",value:retry})}}}var BOM=[239,187,191];function hasBom(buffer){return BOM.every((charCode,index)=>buffer.charCodeAt(index)===charCode)}init_define_import_meta_env();init_define_import_meta_env();init_define_import_meta_env();init_define_import_meta_env();init_define_import_meta_env();var freeGlobal=typeof global=="object"&&global&&global.Object===Object&&global,freeGlobal_default=freeGlobal;var freeSelf=typeof self=="object"&&self&&self.Object===Object&&self,root=freeGlobal_default||freeSelf||Function("return this")(),root_default=root;var Symbol2=root_default.Symbol,Symbol_default=Symbol2;init_define_import_meta_env();var objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty,nativeObjectToString=objectProto.toString,symToStringTag=Symbol_default?Symbol_default.toStringTag:void 0;function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=void 0;var unmasked=!0}catch{}var result=nativeObjectToString.call(value);return unmasked&&(isOwn?value[symToStringTag]=tag:delete value[symToStringTag]),result}var getRawTag_default=getRawTag;init_define_import_meta_env();var objectProto2=Object.prototype,nativeObjectToString2=objectProto2.toString;function objectToString(value){return nativeObjectToString2.call(value)}var objectToString_default=objectToString;var nullTag="[object Null]",undefinedTag="[object Undefined]",symToStringTag2=Symbol_default?Symbol_default.toStringTag:void 0;function baseGetTag(value){return value==null?value===void 0?undefinedTag:nullTag:symToStringTag2&&symToStringTag2 in Object(value)?getRawTag_default(value):objectToString_default(value)}var baseGetTag_default=baseGetTag;init_define_import_meta_env();function isObjectLike(value){return value!=null&&typeof value=="object"}var isObjectLike_default=isObjectLike;init_define_import_meta_env();var isArray=Array.isArray,isArray_default=isArray;init_define_import_meta_env();function isObject(value){var type=typeof value;return value!=null&&(type=="object"||type=="function")}var isObject_default=isObject;init_define_import_meta_env();init_define_import_meta_env();init_define_import_meta_env();init_define_import_meta_env();var asyncTag="[object AsyncFunction]",funcTag="[object Function]",genTag="[object GeneratorFunction]",proxyTag="[object Proxy]";function isFunction(value){if(!isObject_default(value))return!1;var tag=baseGetTag_default(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag}var isFunction_default=isFunction;init_define_import_meta_env();init_define_import_meta_env();var coreJsData=root_default["__core-js_shared__"],coreJsData_default=coreJsData;var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData_default&&coreJsData_default.keys&&coreJsData_default.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:""}();function isMasked(func){return!!maskSrcKey&&maskSrcKey in func}var isMasked_default=isMasked;init_define_import_meta_env();var funcProto=Function.prototype,funcToString=funcProto.toString;function toSource(func){if(func!=null){try{return funcToString.call(func)}catch{}try{return func+""}catch{}}return""}var toSource_default=toSource;var reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reIsHostCtor=/^\[object .+?Constructor\]$/,funcProto2=Function.prototype,objectProto3=Object.prototype,funcToString2=funcProto2.toString,hasOwnProperty2=objectProto3.hasOwnProperty,reIsNative=RegExp("^"+funcToString2.call(hasOwnProperty2).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative(value){if(!isObject_default(value)||isMasked_default(value))return!1;var pattern=isFunction_default(value)?reIsNative:reIsHostCtor;return pattern.test(toSource_default(value))}var baseIsNative_default=baseIsNative;init_define_import_meta_env();function getValue(object,key){return object?.[key]}var getValue_default=getValue;function getNative(object,key){var value=getValue_default(object,key);return baseIsNative_default(value)?value:void 0}var getNative_default=getNative;var WeakMap2=getNative_default(root_default,"WeakMap"),WeakMap_default=WeakMap2;init_define_import_meta_env();init_define_import_meta_env();var MAX_SAFE_INTEGER=9007199254740991;function isLength(value){return typeof value=="number"&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER}var isLength_default=isLength;function isArrayLike(value){return value!=null&&isLength_default(value.length)&&!isFunction_default(value)}var isArrayLike_default=isArrayLike;init_define_import_meta_env();var objectProto4=Object.prototype;function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=="function"&&Ctor.prototype||objectProto4;return value===proto}var isPrototype_default=isPrototype;init_define_import_meta_env();init_define_import_meta_env();var argsTag="[object Arguments]";function baseIsArguments(value){return isObjectLike_default(value)&&baseGetTag_default(value)==argsTag}var baseIsArguments_default=baseIsArguments;var objectProto5=Object.prototype,hasOwnProperty3=objectProto5.hasOwnProperty,propertyIsEnumerable=objectProto5.propertyIsEnumerable,isArguments=baseIsArguments_default(function(){return arguments}())?baseIsArguments_default:function(value){return isObjectLike_default(value)&&hasOwnProperty3.call(value,"callee")&&!propertyIsEnumerable.call(value,"callee")},isArguments_default=isArguments;init_define_import_meta_env();init_define_import_meta_env();function stubFalse(){return!1}var stubFalse_default=stubFalse;var freeExports=typeof exports=="object"&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&typeof module=="object"&&module&&!module.nodeType&&module,moduleExports=freeModule&&freeModule.exports===freeExports,Buffer2=moduleExports?root_default.Buffer:void 0,nativeIsBuffer=Buffer2?Buffer2.isBuffer:void 0,isBuffer=nativeIsBuffer||stubFalse_default,isBuffer_default=isBuffer;init_define_import_meta_env();init_define_import_meta_env();var argsTag2="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag2="[object Function]",mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",weakMapTag="[object WeakMap]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=!0;typedArrayTags[argsTag2]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag2]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=!1;function baseIsTypedArray(value){return isObjectLike_default(value)&&isLength_default(value.length)&&!!typedArrayTags[baseGetTag_default(value)]}var baseIsTypedArray_default=baseIsTypedArray;init_define_import_meta_env();function baseUnary(func){return function(value){return func(value)}}var baseUnary_default=baseUnary;init_define_import_meta_env();var freeExports2=typeof exports=="object"&&exports&&!exports.nodeType&&exports,freeModule2=freeExports2&&typeof module=="object"&&module&&!module.nodeType&&module,moduleExports2=freeModule2&&freeModule2.exports===freeExports2,freeProcess=moduleExports2&&freeGlobal_default.process,nodeUtil=function(){try{var types=freeModule2&&freeModule2.require&&freeModule2.require("util").types;return types||freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch{}}(),nodeUtil_default=nodeUtil;var nodeIsTypedArray=nodeUtil_default&&nodeUtil_default.isTypedArray,isTypedArray=nodeIsTypedArray?baseUnary_default(nodeIsTypedArray):baseIsTypedArray_default,isTypedArray_default=isTypedArray;init_define_import_meta_env();init_define_import_meta_env();init_define_import_meta_env();function overArg(func,transform){return function(arg){return func(transform(arg))}}var overArg_default=overArg;var nativeKeys=overArg_default(Object.keys,Object),nativeKeys_default=nativeKeys;var objectProto6=Object.prototype,hasOwnProperty4=objectProto6.hasOwnProperty;function baseKeys(object){if(!isPrototype_default(object))return nativeKeys_default(object);var result=[];for(var key in Object(object))hasOwnProperty4.call(object,key)&&key!="constructor"&&result.push(key);return result}var baseKeys_default=baseKeys;init_define_import_meta_env();var Map2=getNative_default(root_default,"Map"),Map_default=Map2;init_define_import_meta_env();init_define_import_meta_env();var DataView=getNative_default(root_default,"DataView"),DataView_default=DataView;init_define_import_meta_env();var Promise2=getNative_default(root_default,"Promise"),Promise_default=Promise2;init_define_import_meta_env();var Set2=getNative_default(root_default,"Set"),Set_default=Set2;var mapTag2="[object Map]",objectTag2="[object Object]",promiseTag="[object Promise]",setTag2="[object Set]",weakMapTag2="[object WeakMap]",dataViewTag2="[object DataView]",dataViewCtorString=toSource_default(DataView_default),mapCtorString=toSource_default(Map_default),promiseCtorString=toSource_default(Promise_default),setCtorString=toSource_default(Set_default),weakMapCtorString=toSource_default(WeakMap_default),getTag=baseGetTag_default;(DataView_default&&getTag(new DataView_default(new ArrayBuffer(1)))!=dataViewTag2||Map_default&&getTag(new Map_default)!=mapTag2||Promise_default&&getTag(Promise_default.resolve())!=promiseTag||Set_default&&getTag(new Set_default)!=setTag2||WeakMap_default&&getTag(new WeakMap_default)!=weakMapTag2)&&(getTag=function(value){var result=baseGetTag_default(value),Ctor=result==objectTag2?value.constructor:void 0,ctorString=Ctor?toSource_default(Ctor):"";if(ctorString)switch(ctorString){case dataViewCtorString:return dataViewTag2;case mapCtorString:return mapTag2;case promiseCtorString:return promiseTag;case setCtorString:return setTag2;case weakMapCtorString:return weakMapTag2}return result});var getTag_default=getTag;init_define_import_meta_env();var mapTag3="[object Map]",setTag3="[object Set]",objectProto7=Object.prototype,hasOwnProperty5=objectProto7.hasOwnProperty;function isEmpty(value){if(value==null)return!0;if(isArrayLike_default(value)&&(isArray_default(value)||typeof value=="string"||typeof value.splice=="function"||isBuffer_default(value)||isTypedArray_default(value)||isArguments_default(value)))return!value.length;var tag=getTag_default(value);if(tag==mapTag3||tag==setTag3)return!value.size;if(isPrototype_default(value))return!baseKeys_default(value).length;for(var key in value)if(hasOwnProperty5.call(value,key))return!1;return!0}var isEmpty_default=isEmpty;init_define_import_meta_env();async function*streamAsyncIterable(stream){let reader=stream.getReader();try{for(;;){let{done,value}=await reader.read();if(done)return;yield value}}finally{reader.releaseLock()}}async function fetchSSE(resource,options){let{onMessage:onMessage2,...fetchOptions}=options,resp=await fetch(resource,fetchOptions);if(!resp.ok){let error=await resp.json().catch(()=>({}));throw new Error(isEmpty_default(error)?`${resp.status} ${resp.statusText}`:JSON.stringify(error))}let parser=createParser(event=>{event.type==="event"&&onMessage2(event.data)});for await(let chunk of streamAsyncIterable(resp.body)){let str=new TextDecoder().decode(chunk);parser.feed(str)}}init_define_import_meta_env();var import_webextension_polyfill3=__toESM(require_browser_polyfill()),createMessageStore=()=>({set:async(key,value)=>{await import_webextension_polyfill3.default.storage.local.set({[key]:value}).then(()=>{console.log("Value is set to",value)})},get:async key=>{let result=await import_webextension_polyfill3.default.storage.local.get(key);return console.log("Value currently is",result),result[key]},getAll:async()=>{let result=await import_webextension_polyfill3.default.storage.local.get();return console.log("All local storage is",result),result},clear:async()=>{await import_webextension_polyfill3.default.storage.local.clear()}});var CHATGPT_MODEL="gpt-3.5-turbo",USER_LABEL_DEFAULT="User",ASSISTANT_LABEL_DEFAULT="ChatGPT",ChatGPTAPI=class{_apiKey;_apiBaseUrl;_debug;_systemMessage;_completionParams;_maxModelTokens;_maxResponseTokens;_fetch;_getMessageById;_upsertMessage;_messageStore;constructor(opts){let{apiKey,apiBaseUrl="https://api.openai.com/v1",debug=!1,completionParams,systemMessage,maxModelTokens=4e3,maxResponseTokens=1e3,getMessageById,upsertMessage}=opts;if(this._apiKey=apiKey,this._apiBaseUrl=apiBaseUrl,this._debug=!!debug,this._fetch=fetch,this._completionParams={model:CHATGPT_MODEL,temperature:.8,top_p:1,presence_penalty:1,...completionParams},this._systemMessage=systemMessage,this._systemMessage===void 0){let currentDate=new Date().toISOString().split("T")[0];this._systemMessage=`You are ChatGPT, a large language model trained by OpenAI. Answer as concisely as possible.
Knowledge cutoff: 2021-09-01
Current date: ${currentDate}`}if(this._maxModelTokens=maxModelTokens,this._maxResponseTokens=maxResponseTokens,this._getMessageById=getMessageById??this._defaultGetMessageById,this._upsertMessage=upsertMessage??this._defaultUpsertMessage,this._messageStore=createMessageStore(),!this._apiKey)throw new Error("OpenAI missing required apiKey")}async sendMessage(text,opts={}){let{parentMessageId,messageId=v4_default(),timeoutMs,onProgress,onBeforeSendMessage,stream=!!onProgress,completionParams}=opts,{abortSignal}=opts,abortController;timeoutMs&&!abortSignal&&(abortController=new AbortController,abortSignal=abortController.signal);let message={role:"user",id:messageId,parentMessageId,text};onBeforeSendMessage?.(message),await this._upsertMessage(message);let{messages,maxTokens,numTokens}=await this._buildMessages(text,opts),result={role:"assistant",id:v4_default(),parentMessageId:messageId,text:""},responseP=new Promise(async(resolve,reject)=>{let url=`${this._apiBaseUrl}/chat/completions`,headers={"Content-Type":"application/json",Authorization:`Bearer ${this._apiKey}`},body={max_tokens:maxTokens,...this._completionParams,...completionParams,messages,stream};if(this._debug&&console.log(`sendMessage (${numTokens} tokens)`,body),stream)fetchSSE(url,{method:"POST",headers,body:JSON.stringify(body),signal:abortSignal,onMessage:data=>{if(data==="[DONE]")return result.text=result.text.trim(),resolve(result);try{let response=JSON.parse(data);if(response.id&&(result.id=response.id),response?.choices?.length){let delta=response.choices[0].delta;result.delta=delta.content,delta?.content&&(result.text+=delta.content),result.detail=response,delta.role&&(result.role=delta.role),onProgress?.(result)}}catch(err){return console.warn("OpenAI stream SEE event unexpected error",err),reject(err)}}}).catch(reject);else try{let res=await this._fetch(url,{method:"POST",headers,body:JSON.stringify(body),signal:abortSignal});if(!res.ok){let reason=await res.text(),msg=`OpenAI error ${res.status||res.statusText}: ${reason}`,error=new ChatGPTError(msg,{cause:res});return error.statusCode=res.status,error.statusText=res.statusText,reject(error)}let response=await res.json();if(this._debug&&console.log(response),response?.id&&(result.id=response.id),response?.choices?.length){let message2=response.choices[0].message;result.text=message2?.content??"",message2?.role&&(result.role=message2.role)}else{let res2=response;return reject(new Error(`OpenAI error: ${res2?.detail?.message||res2?.detail||"unknown"}`))}return result.detail=response,resolve(result)}catch(err){return reject(err)}}).then(message2=>this._upsertMessage(message2).then(()=>message2));return timeoutMs?(abortController&&(responseP.cancel=()=>{abortController.abort()}),pTimeout(responseP,{milliseconds:timeoutMs,message:"OpenAI timed out waiting for response"})):responseP}get apiKey(){return this._apiKey}set apiKey(apiKey){this._apiKey=apiKey}async _buildMessages(text,opts){let{systemMessage=this._systemMessage}=opts,{parentMessageId}=opts,userLabel=USER_LABEL_DEFAULT,assistantLabel=ASSISTANT_LABEL_DEFAULT,maxNumTokens=this._maxModelTokens-this._maxResponseTokens,messages=[];systemMessage&&messages.push({role:"system",content:systemMessage});let systemMessageOffset=messages.length,nextMessages=text?messages.concat([{role:"user",content:text,name:opts.name}]):messages,numTokens=0;do{let prompt=nextMessages.reduce((prompt2,message)=>{switch(message.role){case"system":return prompt2.concat([`Instructions:
${message.content}`]);case"user":return prompt2.concat([`${userLabel}:
${message.content}`]);default:return prompt2.concat([`${assistantLabel}:
${message.content}`])}},[]).join(`

`),isValidPrompt=!0;if(prompt&&!isValidPrompt||(messages=nextMessages,!isValidPrompt)||!parentMessageId)break;let parentMessage=await this._getMessageById(parentMessageId);if(!parentMessage)break;let parentMessageRole=parentMessage.role||"user";nextMessages=nextMessages.slice(0,systemMessageOffset).concat([{role:parentMessageRole,content:parentMessage.text,name:parentMessage.name},...nextMessages.slice(systemMessageOffset)]),parentMessageId=parentMessage.parentMessageId}while(!0);let maxTokens=Math.max(1,Math.min(this._maxModelTokens-numTokens,this._maxResponseTokens));return{messages,maxTokens,numTokens}}async _defaultGetMessageById(id){return await this._messageStore.get(id)}async _defaultUpsertMessage(message){await this._messageStore.set(message.id,message)}};init_define_import_meta_env();var GET_CURRENT_TAB="get-current-tab",ASK_CHATGPT="ask-chatgpt",ASK_CHATGPT_WITH="ask-chatgpt-with",TRANSLATE_WITH="translate-with",SUMMARY_WITH="summary-with";var OPENAI_API_KEY="OPENAI_API_KEY",ACTIONS_OPTIONS="options";init_define_import_meta_env();var import_webextension_polyfill4=__toESM(require_browser_polyfill()),userConfig=async()=>{let result=await import_webextension_polyfill4.default.storage.sync.get(["user-config-store"]);return JSON.parse(result["user-config-store"]).state};init_define_import_meta_env();var systemMessages={[TRANSLATE_WITH]:'I want you to act as an English translator, spelling corrector and improver. I will speak to you in any language and you will detect the language, translate it and answer in the corrected and improved version of my text, in English. I want you to replace my simplified A0-level words and sentences with more beautiful and elegant, upper level English words and sentences. Keep the meaning same, but make them more literary. I want you to only reply the correction, the improvements and nothing else, do not write explanations. My first sentence is "istanbulu cok seviyom burada olmak cok guzel"'};init_define_import_meta_env();var formatTranslatePrompt=async text=>text?`Translate the following text to ${(await userConfig())[ACTIONS_OPTIONS]?.[TRANSLATE_WITH]?.lang??"English"}: ${text}`:"",formatSummaryPrompt=async text=>text?`Summary the following text into 200 words: ${text}`:"",formatters={[ASK_CHATGPT_WITH]:async text=>text??"",[TRANSLATE_WITH]:formatTranslatePrompt,[SUMMARY_WITH]:formatSummaryPrompt};var isDev=!1;import_webextension_polyfill5.default.runtime.onInstalled.addListener(()=>{console.log("Extension installed")});var store=createMessageStore(),previousTabId=0;import_webextension_polyfill5.default.tabs.onActivated.addListener(async({tabId})=>{if(!previousTabId){previousTabId=tabId;return}let tab;try{tab=await import_webextension_polyfill5.default.tabs.get(previousTabId),previousTabId=tabId}catch{return}console.log("previous tab",tab),sendMessage("tab-prev",{title:tab.title},{context:"content-script",tabId})});var client,createClient=async()=>{if(client)return{client,key:void 0};let key=isDev?"":(await userConfig())[OPENAI_API_KEY];return key?(client=new ChatGPTAPI({apiKey:key}),{client,key}):(console.error("No API key found"),{client,key})};onMessage(GET_CURRENT_TAB,async()=>{try{return{id:(await import_webextension_polyfill5.default.tabs.query({active:!0,currentWindow:!0}))[0]?.id}}catch{return{}}});onMessage(ASK_CHATGPT,async message=>{try{let{data}=message,tabs=await import_webextension_polyfill5.default.tabs.query({active:!0,currentWindow:!0}),tabId=tabs[0].id,action=data.action;console.log(action,"in background",tabs,message);let resolvedTest=await formatters[action](data.text);if(!resolvedTest||!data.text)return{message:void 0};let{client:chatClient}=await createClient(),parentMessageId=await store.get(action),resp=await chatClient.sendMessage(resolvedTest,{stream:!0,systemMessage:systemMessages[action]??void 0,parentMessageId,async onBeforeSendMessage(userMessage){tabId&&sendMessage(ASK_CHATGPT,{message:userMessage,action},{context:"content-script",tabId})},async onProgress(partialResponse){await store.set(action,partialResponse.id),tabId&&sendMessage(ASK_CHATGPT,{message:partialResponse,action},{context:"content-script",tabId})}});return await import_webextension_polyfill5.default.notifications.create({type:"basic",iconUrl:import_webextension_polyfill5.default.runtime.getURL("assets/icon-512.png"),title:data.text,message:resp.text}),{message:resp}}catch{return{message:void 0}}});onMessage("test",async data=>{try{return sendMessage("test",{value:data.data.value},"content-script"),{message:data.data.value}}catch{return{message:void 0}}});
/*! Bundled license information:

lodash-es/lodash.js:
  (**
   * @license
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="es" -o ./`
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)
*/
